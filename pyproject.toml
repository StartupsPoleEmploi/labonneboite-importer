[tool.poetry]
name = "lbb-importer"
version = "0.1.0"
description = "The importer job is to recreate from scratch a complete dataset of offices base on a mapping of a SIRET and a score."
authors = ["La Bonne Boite <labonneboite@pole-emploi.fr>"]
license = "GPL-3.0-only"
readme = "README.md"
packages = []
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "License :: OSI Approved :: GNU Affero General Public License v3",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10"]

[tool.poetry.dependencies]
python = "^3.10"
# labonneboite dependency
labonneboite-common = "0.5.3"
flower = "^1.2.0"
redis = "^4.3.1"
# apache-airflow="^2.4.1" # useless because of the docker 
apache-airflow-providers-mysql="^3.2.1"
psycopg-binary="^3.1.3"
psycopg2="^2.9.3"

[tool.poetry.group.dev.dependencies]
pytest = "^7.1.3"
pytest-cov = "^3.0.0"
pytest-watch = "^4.2.0"
flake8 = "^5.0.4"
flake8-junit-report = "^2.1.0"
coverage = "^6.4.4"
mypy = "^0.982"
sqlalchemy-stubs = "^0.4"
Flake8-pyproject = "^1.2.0"


[tool.poetry.group.help.dependencies]
mkdocs = "^1.4.1"
mkdocs-material = "^8.5.6"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


[tool.pytest.ini_options]
minversion = "6.0"
addopts = "--cov --cov-fail-under  90"
testpaths = [
    "tests"
    ]

python_files = "*_tests.py"

[tool.pytest-watch]
ignore = ["./coverage", ".pytest_cache", "./testResults", "./logs"]

[tool.coverage.run]
branch = true
parallel = true
concurrency = ["multiprocessing"]

[tool.coverage.report]
precision = 1
show_missing = true
ignore_errors = true
exclude_lines =[
    "pragma: no cover",
    "raise NotImplementedError",
    "def __repr__",
    "if settings.DEBUG",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:"
    ]
omit = [
    "*/test*",
    "*/migrations/*",
    "*/alembic/*",
    "manage.py",
    "venv/*"
    ]

[tool.flake8]
ignore = [
    "W503",  # line break before binary operator
    "D100",  # Missing docstring in public module
    "D101",  # Missing docstring in public class
    "D102",  # Missing docstring in public method
    "D104",  # Missing docstring in public package
    "D106",  # Missing docstring in public nested class
    "D200",  # One-line docstring should fit on one line with quotes
    "D202",  # No blank lines allowed after function docstring
    "D204",  # 1 blank line required after class docstring
    "D205",  # 1 blank line required between summary line and description
    "D400",  # First line should end with a period
    "D406"   # 1 blank line required before class docstring
    ]
max-line-length = 120
max-complexity = 18
select = ["B", "C", "E", "F", "W", "T4", "B9"]
enable-extensions = ["I", "A", "G", "D"]
application-import-names = ["api", "config", "post", "model_utils", "saas", "appointment", "user"]
import-order-style = "google"
docstring-convention = "numpy"
exclude = "migrations"

[tool.mypy]
strict = true
show_error_codes = true
mypy_path = "./importer/plugins"
plugins = [ "sqlmypy" ]

[[tool.mypy.overrides]]
module = [
    "mysql.connector.abstracts",
    "MySQLdb.connections",
    "airflow.providers.mysql.hooks.mysql",
    "airflow.providers.http.hooks.http"
    ]
ignore_missing_imports = true
