FROM ubuntu:focal

# Installe le français
ENV LANG=fr_FR.UTF-8
RUN apt-get update && \
    export DEBIAN_FRONTEND=noninteractive; \
    apt-get -y install vim language-pack-fr rsyslog && \
    echo "LANG=\"$LANG\"\nLANGUAGE=\"$LANG\"\nLC_NUMERIC=\"$LANG\"\nLC_TIME=\"$LANG\"\nLC_MONETARY=\"$LANG\"\nLC_PAPER=\"$LANG\"\nLC_IDENTIFICATION=\"$LANG\"\nLC_NAME=\"$LANG\"\nLC_ADDRESS=\"$LANG\"\nLC_TELEPHONE=\"$LANG\"\nLC_MEASUREMENT=\"$LANG\"" >>/etc/default/locale;

# Installe logrotate: nécessite un CMD service cron start
RUN apt-get update && \
    apt-get -y install logrotate cron && \
    echo '#!/bin/sh\nexit 0' >/usr/sbin/policy-rc.d;

# Mise à l'heure
#   TIMEZONE=<fuseau>
ARG TIMEZONE=${TIMEZONE:-Europe/Paris}
ENV TZ $TIMEZONE
RUN export DEBIAN_FRONTEND=noninteractive && \
    apt-get update && \
    apt-get -y install tzdata && \
    echo "$TIMEZONE" >/etc/timezone; \
    ln -sf /usr/share/zoneinfo/$TIMEZONE /etc/localtime; \
    dpkg-reconfigure -f noninteractive tzdata;

# Installe nginx et ses extensions
RUN export DEBIAN_FRONTEND=noninteractive && \
    apt-get update && \
    apt-get -y install nginx nginx-extras && \
    echo "server_tokens off;\nmore_set_headers \"Server\";" >/etc/nginx/conf.d/extras.conf; # Supprime les tokens de versions

# # Installe et configure un fail2ban pour nginx: nécessite un CMD service fail2ban start
# #   FAIL2BAN_REQLIMIT=<limite avant ban>
# #   FAIL2BAN_IPWHITELIST=<liste d'ip autorisée à flooder, séparées par des espaces>
# ARG FAIL2BAN_REQLIMIT=${FAIL2BAN_REQLIMIT:-false}
# ARG FAIL2BAN_IPWHITELIST=${FAIL2BAN_IPWHITELIST:-}
# RUN apt-get update && \
#     apt-get -y install fail2ban iptables && \
# 	echo "[sshd]\nenabled = false\n\n[nginx-req-limit]\nenabled = true\nfilter = nginx-req-limit\naction = iptables-multiport[name=ReqLimit, port=\"http,https\", protocol=tcp]\nport = http,https\nlogpath = /var/log/nginx/error.log\nfindtime = 600\nbantime = 7200\nmaxretry = 10\n\n[nginx-conn-limit]\nenabled = true\nfilter = nginx-conn-limit\naction = iptables-multiport[name=ConnLimit, port=\"http,https\", protocol=tcp]\nport = http,https\nlogpath = /var/log/nginx/error.log\nfindtime = 300\nbantime = 7200\nmaxretry = 100" >/etc/fail2ban/jail.d/nginx.conf; \
# 	echo "[Definition]\nfailregex = limiting connections by zone.*client: <HOST>" >/etc/fail2ban/filter.d/nginx-conn-limit.conf; \
# 	echo "[Definition]\nfailregex = ^ \[error\] \d+#\d+: \*\d+ user \"\S+\":? (password mismatch|was not found in \".*\"), client: <HOST>, server: \S+, request: \"\S+ \S+ HTTP/\d+\.\d+\", host: \"\S+\"\s*$\nignoreregex =" >/etc/fail2ban/filter.d/nginx-http-auth.conf; \
# 	echo "[Definition]\nfailregex = limiting requests, excess:.* by zone.*client: <HOST>" >/etc/fail2ban/filter.d/nginx-req-limit.conf; \
# 	WHITE_LIST=""; \
# 	if [ "$FAIL2BAN_IPWHITELIST" != "" ]; then for IP in $FAIL2BAN_IPWHITELIST; do WHITE_LIST="$WHITE_LIST\n$IP 1;"; done; fi; \
# 	if [ "$FAIL2BAN_REQLIMIT" != "false" ]; then mkdir -p /etc/nginx/fail2ban /etc/nginx/conf.d; fi; \
#  	if [ "$FAIL2BAN_REQLIMIT" != "false" ]; then echo "geo \$whitelist {default 0; $WHITE_LIST}" >/etc/nginx/conf.d/fail2ban_conf.conf; fi; \
# 	if [ "$FAIL2BAN_REQLIMIT" != "false" ]; then echo "map \$whitelist \$limit {0 \$binary_remote_addr; 1 \"\";}\nlimit_conn_zone \$limit zone=conn_limit_per_ip:10m;\nlimit_req_zone \$limit zone=req_limit_per_ip:10m rate=$FAIL2BAN_REQLIMIT;" >>/etc/nginx/conf.d/fail2ban_conf.conf; fi; \
#     if [ "$FAIL2BAN_REQLIMIT" != "false" ]; then echo "limit_conn conn_limit_per_ip 10; \nlimit_req zone=req_limit_per_ip burst=10 nodelay;" >/etc/nginx/fail2ban/fail2ban_limit.conf; fi

# Configure le SSL pour nginx
#   SSL_FULLCHAIN=<le jeu de certificat sur une seule ligne avec CRLF encodé en \n>
#   SSL_PRIVKEY=<la clef privée, encodée de la même manière>
#   SSL_DHPARAM=<dhparam encodé de la même manière>, création possible par openssl dhparam -out dhparam.pem 2048
ARG ENV_TYPE=${ENV_TYPE:-production}
ENV ENV_TYPE=$ENV_TYPE
ARG SSL_FULLCHAIN=${SSL_FULLCHAIN:-}
ARG SSL_PRIVKEY=${SSL_PRIVKEY:-}
ARG SSL_DHPARAM=${SSL_DHPARAM:-}
ENV SSL_FULLCHAIN=$SSL_FULLCHAIN
ENV SSL_PRIVKEY=$SSL_PRIVKEY
ENV SSL_DHPARAM=$SSL_DHPARAM
ARG NGINX_SSLDIR=/etc/nginx/ssl
RUN if [ "$SSL_FULLCHAIN" != "" ] && [ "$SSL_PRIVKEY" != "" ] && [ "$SSL_DHPARAM" != "" ]; then \
       mkdir -p $NGINX_SSLDIR; \
       echo "$SSL_FULLCHAIN" >$NGINX_SSLDIR/fullchain.pem; \
       echo "$SSL_PRIVKEY" >$NGINX_SSLDIR/privkey.pem; \
       echo "$SSL_DHPARAM" >$NGINX_SSLDIR/dhparam.pem; \
       ln -sf /etc/nginx/sites-enabled/.ssl/ssl.conf $NGINX_SSLDIR/ssl.conf; \
    fi

CMD service nginx start; \
    service cron start; \
    # service fail2ban start; \
    sleep infinity;
